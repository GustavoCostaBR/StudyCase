services:
  mongodb:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword  # Change in production!
    networks:
    - mynetwork


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI (optional)
    networks:
      - mynetwork

  pricescraperapi:
    build:
      context: ./PriceScraperApi/PriceScraperApi  # Path to the API project's directory
      dockerfile: Dockerfile  # Name of the Dockerfile for the API project
    container_name: pricescraperapi_container
    restart: always
    ports:
      - "5000:8080"  # Map host port 5000 to container port 8080
    environment:
      ASPNETCORE_ENVIRONMENT: Development  # Or "Production"
      MongoDB__ConnectionString: "mongodb://root:examplepassword@mongodb:27017"
      RabbitMq__ConnectionString: "amqp://guest:guest@rabbitmq:5672/"  # Add this
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - mynetwork
    profiles: ["!development"]

  python_consumer:
    build:
      context: ../ScraperService
      dockerfile: Dockerfile.python
    container_name: python_consumer_container
    environment:
      RABBITMQ_HOST: rabbitmq  # When in container, connect to RabbitMQ using the service name
    depends_on:
      - rabbitmq
    networks:
      - mynetwork

volumes:
  mongodb_data:

networks:
  mynetwork: